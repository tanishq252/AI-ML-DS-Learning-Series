```{r}
plot(cars)
if (!requireNamespace(“BiocManager”, quietly = TRUE))
BiocManager::install(“ShortRead”)
if (!requireNamespace(“BiocManager”, quietly = TRUE))
install.packages(“BiocManager”)
BiocManager::install(“Biostrings”)
BiocManager::install(“ShortRead”)
dbinom(92,100,0.9)
setwd("F:/AI-ML-DS Learning series/R")
dataSet<-read.csv('Data.csv')
View(dataSet)
dataSet$Age = ifelse(is.na(dataSet$Age),
ave(dataSet$Age), FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Age)
se(is.na(dataSet$Age),
ave(dataSet$Age), FUN = function(x) mean(x, na.rm = TRUE),
dataSet$Age)
#Nan values handling
dataSet$Age = ifelse(is.na(dataSet$Age),
ave(dataSet$Age), FUN = function(x) mean(x, na.rm = TRUE),
dataSet$Age)
dataSet$Age = ifelse(is.na(dataSet$Age),
ave(dataSet$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Age)
dataSet$Salary = ifelse(is.na(dataSet$Salary),
ave(dataSet$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Salary)
dataSet$Country  = factor(dataSet$Country, levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataSet$Country  = factor(dataSet$Country, levels = c('France', 'Spain', 'Germany'),
labels = c(1,2))
dataSet$Country  = factor(dataSet$Country, levels = c('France', 'Spain'),
labels = c(1,2))
dataSet<-read.csv('Data.csv')
View(dataSet)
###############################
#Nan values handling
#age and salary columns are observed to have nan values
#below code checks whether age is nan or not and if nan then replaces with mean of the dataset
#age
dataSet$Age = ifelse(is.na(dataSet$Age),
ave(dataSet$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Age)
#salary
dataSet$Salary = ifelse(is.na(dataSet$Salary),
ave(dataSet$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Salary)
dataSet$Country  = factor(dataSet$Country, levels = c('France', 'Spain'),
labels = c(1,2))
dataSet<-read.csv('Data.csv')
View(dataSet)
###############################
#Nan values handling
#age and salary columns are observed to have nan values
#below code checks whether age is nan or not and if nan then replaces with mean of the dataset
#age
dataSet$Age = ifelse(is.na(dataSet$Age),
ave(dataSet$Age, FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Age)
#salary
dataSet$Salary = ifelse(is.na(dataSet$Salary),
ave(dataSet$Salary, FUN = function(x) mean(x, na.rm = TRUE)),
dataSet$Salary)
dataSet$Country  = factor(dataSet$Country, levels = c('France', 'Spain', 'Germany'),
labels = c(1,2,3))
dataSet$Purchased  = factor(dataSet$Purchased, levels = c('Yes', 'No'),
labels = c(1,0))
################################
#splitting data set
install.packages('caTools')
library(caTools)
set.seed(10)
split = sample.split(dataSet$Purchased, SplitRatio = 0.8)
set.seed(10)
split = sample.split(dataSet$Purchased, SplitRatio = 0.8)
split
#over here 'TRUE' in split indicates that observation goes in training set
#'FALSE' means obs in tsting set
train_set = subset(dataSet, split == TRUE)
train_set
test_set = subset(dataSet, split == FALSE)
test_set
View(train_set)
View(test_set)
